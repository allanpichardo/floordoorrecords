{"version":3,"sources":["img/floordoor_logo.svg","components/Toolbar.jsx","components/Menu.jsx","components/Album.jsx","lib/utils.js","components/AlbumGrid.jsx","components/Player.jsx","components/Release.jsx","components/Artist.jsx","components/ArtistGrid.jsx","components/Bio.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Toolbar","props","state","isOpen","handleMenuClicked","bind","getButtonStyle","this","className","onMenuClicked","prevProps","prevState","snapshot","setState","onClick","getIcon","to","src","logo","alt","href","target","rel","Component","Menu","window","addEventListener","e","document","querySelector","contains","onMenuItemClicked","getOpenClass","exact","activeClassName","React","Album","slugify","albumData","title","image","artist","Utils","callback","fetch","then","response","json","data","catch","albums","slug","i","length","artists","name","lowestDistance","levenshteinDistance","lowestIndex","distance","charAt","a","b","distanceMatrix","Array","fill","map","j","indicator","Math","min","AlbumGrid","fetchAlbumData","fetchAllAlbums","err","console","log","slice","album","key","Player","albumId","merchId","seamless","Release","match","params","findAlbumBySlug","notes","bandcamp_id","merch_id","Artist","artistData","cover_image","ArtistGrid","fetchArtistData","fetchAllArtists","Bio","fetchData","getWebsiteLink","getFacebookLink","getInstagramLink","getSpotifyLink","findArtistBySlug","website","facebook","instagram","spotify","parts","split","id","width","height","scrolling","frameBorder","allowtransparency","other_image","App","isMenuOpen","handleMenuItemClicked","basename","process","path","render","Boolean","location","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dc1d3ab2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/floordoor_logo.222aeaaf.svg\";","import React, {Component} from 'react';\nimport './Toolbar.css';\nimport logo from '../img/floordoor_logo.svg';\nimport {Link} from \"react-router-dom\";\n\nexport default class Toolbar extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: props.isOpen\n        };\n\n        this.handleMenuClicked = this.handleMenuClicked.bind(this);\n        this.getButtonStyle = this.getButtonStyle.bind(this);\n    }\n\n    getIcon() {\n        if (this.state.isOpen) {\n            return (<i className=\"material-icons\">\n                menu_open\n            </i>);\n        } else {\n            return (<i className=\"material-icons\">\n                menu\n            </i>);\n        }\n    }\n\n    handleMenuClicked() {\n        if(this.props.onMenuClicked) {\n            this.props.onMenuClicked(!this.state.isOpen);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(this.props.isOpen !== prevProps.isOpen) {\n            this.setState({\n                isOpen: this.props.isOpen\n            });\n        }\n    }\n\n    getButtonStyle() {\n        if(this.state.isOpen) {\n            return \"Toolbar-menu Toolbar-open\";\n        } else {\n            return \"Toolbar-menu\";\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"Toolbar\">\n                <button className={this.getButtonStyle()} onClick={this.handleMenuClicked}>\n                    {this.getIcon()}\n                </button>\n                <div className=\"Toolbar-title\">\n                    <Link to=\"/\">\n                        <img src={logo} alt=\"logo\"/>\n                    </Link>\n                </div>\n                <div className=\"Toolbar-social\">\n                    <a href=\"https://www.facebook.com/floordoorrecords\" target=\"_blank\" rel=\"noopener noreferrer\">\n                        <i className=\"ion-logo-facebook\"/>\n                    </a>\n                    <a href=\"https://www.instagram.com/floordoorrecords\" target=\"_blank\" rel=\"noopener noreferrer\">\n                        <i className=\"ion-logo-instagram\"/>\n                    </a>\n                </div>\n            </div>\n        );\n    }\n\n}","import React from 'react';\nimport './Menu.css';\nimport {NavLink} from \"react-router-dom\";\n\nexport default class Menu extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isOpen: this.props.isOpen\n        };\n    }\n\n    getOpenClass() {\n        return this.state.isOpen ? 'Menu Menu-open' : 'Menu';\n    }\n\n    componentDidMount() {\n        window.addEventListener('click', (e) => {\n            if (this.state.isOpen && !document.querySelector('.Menu').contains(e.target) && e.target.className !== 'material-icons'){\n                this.props.onMenuItemClicked();\n            }\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(this.props.isOpen !== prevProps.isOpen) {\n            this.setState({\n                isOpen: this.props.isOpen\n            });\n        }\n    }\n\n    render() {\n        return(\n            <div className={this.getOpenClass()}>\n                <div/>\n                <div className=\"Menu-link-container\">\n                    <ul>\n                        <li><NavLink exact to=\"/\" className=\"Menu-link\" activeClassName=\"Menu-selected\" onClick={this.props.onMenuItemClicked}>Releases</NavLink></li>\n                        <li><NavLink to=\"/artists\" className=\"Menu-link\" activeClassName=\"Menu-selected\" onClick={this.props.onMenuItemClicked}>Artists</NavLink></li>\n                        <li><NavLink exact to=\"/contact\" className=\"Menu-link\" activeClassName=\"Menu-selected\" onClick={this.props.onMenuItemClicked}>Contact</NavLink></li>\n                    </ul>\n                </div>\n                <div className=\"Menu-footer\">\n                    <a href=\"https://www.allanpichardo.com\" target=\"_blank\" rel=\"noopener noreferrer\">{'design by My <3 MHz'}</a>\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport './Album.css';\nimport {Link} from \"react-router-dom\";\nimport slugify from 'slugify';\n\nexport default class Album extends React.Component {\n\n    render() {\n        return (\n            <div className=\"Album\" >\n                <Link to={`/releases/${slugify(this.props.albumData.title)}`}>\n                    <img src={this.props.albumData.image} alt={this.props.albumData.title}/>\n                    <div className=\"Album-overlay\" >\n                        <h4>{this.props.albumData.title}</h4>\n                        <h5>{this.props.albumData.artist}</h5>\n                    </div>\n                </Link>\n            </div>\n        )\n    }\n}","import slugify from \"slugify\";\n\nexport default class Utils {\n\n    static fetchAllAlbums(callback) {\n        fetch('/data/albums.json')\n            .then((response) => {\n                return response.json()\n            }).then((data) => {\n                callback(null, data);\n            }).catch(e  => {\n                callback(e);\n        });\n    }\n\n    static fetchAllArtists(callback) {\n        fetch('/data/artists.json')\n            .then((response) => {\n                return response.json()\n            }).then((data) => {\n            callback(null, data);\n        }).catch(e  => {\n            callback(e);\n        });\n    }\n\n\n    static findAlbumBySlug(albums, slug) {\n        for(let i = 0; i < albums.length; i++) {\n            if(slugify(albums[i].title) === slug) {\n                return albums[i];\n            }\n        }\n        return null;\n    }\n\n    static findArtistBySlug(artists, slug) {\n        for(let i = 0; i < artists.length; i++) {\n            if(slugify(artists[i].name) === slug) {\n                return artists[i];\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Search all the albums and get one by name\n     * which is closest to the one searched for\n     * @param albums\n     * @param name\n     */\n    static findAlbumByName(albums, name) {\n        if(albums.length > 0) {\n            let lowestDistance = Utils.levenshteinDistance(name, albums[0].title);\n            let lowestIndex = 0;\n            for(let i = 1; i < albums.length; i++) {\n                let distance = Utils.levenshteinDistance(name, albums[i].title);\n                if(distance < lowestDistance) {\n                    lowestIndex = i;\n                    lowestDistance = distance;\n                }\n            }\n            return albums[lowestIndex].title.charAt(0) === name.charAt(0) ? albums[lowestIndex] : null;\n        }\n        return null;\n    }\n\n    /**\n     * @param {string} a\n     * @param {string} b\n     * @return {number}\n     */\n    static  levenshteinDistance(a, b) {\n        // Create empty edit distance matrix for all possible modifications of\n        // substrings of a to substrings of b.\n        const distanceMatrix = Array(b.length + 1).fill(null).map(() => Array(a.length + 1).fill(null));\n\n        // Fill the first row of the matrix.\n        // If this is first row then we're transforming empty string to a.\n        // In this case the number of transformations equals to size of a substring.\n        for (let i = 0; i <= a.length; i += 1) {\n            distanceMatrix[0][i] = i;\n        }\n\n        // Fill the first column of the matrix.\n        // If this is first column then we're transforming empty string to b.\n        // In this case the number of transformations equals to size of b substring.\n        for (let j = 0; j <= b.length; j += 1) {\n            distanceMatrix[j][0] = j;\n        }\n\n        for (let j = 1; j <= b.length; j += 1) {\n            for (let i = 1; i <= a.length; i += 1) {\n                const indicator = a[i - 1] === b[j - 1] ? 0 : 1;\n                distanceMatrix[j][i] = Math.min(\n                    distanceMatrix[j][i - 1] + 1, // deletion\n                    distanceMatrix[j - 1][i] + 1, // insertion\n                    distanceMatrix[j - 1][i - 1] + indicator, // substitution\n                );\n            }\n        }\n\n        return distanceMatrix[b.length][a.length];\n    }\n\n}","import React from 'react';\nimport './AlbumGrid.css';\nimport Album from \"./Album\";\nimport Utils from \"../lib/utils\";\n\nexport default class AlbumGrid extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            albumData: []\n        };\n\n        this.fetchAlbumData = this.fetchAlbumData.bind(this);\n    }\n\n    componentDidMount() {\n        this.fetchAlbumData();\n    }\n\n    fetchAlbumData() {\n        Utils.fetchAllAlbums((err, albums) => {\n            if(err) {\n                console.log(err);\n            } else {\n                this.setState({\n                    albumData: albums\n                })\n            }\n        });\n    }\n\n    render() {\n        let albumData = this.state.albumData.slice();\n        return (\n            <div className=\"AlbumGrid\">\n                {\n                    albumData.map((album) => {\n                        return (<Album albumData={album} key={album.title}/>);\n                        })\n                }\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './Player.css';\n\nexport default class Player extends React.Component {\n\n    render() {\n        return(\n            <div className=\"Player\">\n                <iframe title={this.props.title} src={`https://bandcamp.com/EmbeddedPlayer/album=${this.props.albumId}/size=large/bgcol=ffffff/linkcol=333333/package=${this.props.merchId ? this.props.merchId : ''}/transparent=true/`} seamless/>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport Utils from \"../lib/utils\";\nimport './Release.css';\nimport Player from \"./Player\";\nimport {Redirect} from \"react-router-dom\";\n\nexport default class Release extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            albumData: this.props.albumData\n        };\n\n        this.fetchAlbumData = this.fetchAlbumData.bind(this);\n    }\n\n    componentDidMount() {\n        if(!this.state.albumData) {\n            this.fetchAlbumData();\n        }\n    }\n\n    fetchAlbumData() {\n        let slug = this.props.match.params.slug;\n        Utils.fetchAllAlbums((err, albums) => {\n            if(err) {\n                console.log(err);\n            } else {\n                let album = Utils.findAlbumBySlug(albums, slug);\n                this.setState({\n                    albumData: album\n                })\n            }\n        });\n    }\n\n    render() {\n        if(this.state.albumData) {\n            return(\n                <div className=\"Release\">\n                    <div className=\"Release-title\">\n                        <h1>{this.state.albumData.title}</h1>\n                        <h3>{this.state.albumData.artist}</h3>\n                    </div>\n                    <div className=\"Release-info\">\n                        <p>{this.state.albumData.notes}</p>\n                    </div>\n                    <div className=\"Release-player\">\n                        <Player albumId={this.state.albumData.bandcamp_id} merchId={this.state.albumData.merch_id}/>\n                    </div>\n                </div>\n            )\n        } else if(this.state.albumData === null){\n            return (<Redirect to=\"/releases\"/>);\n        } else {\n            return (<div></div>);\n        }\n    }\n}","import React from 'react';\nimport './Artist.css';\nimport slugify from \"slugify\";\nimport {Link} from \"react-router-dom\";\n\nexport default class Artist extends React.Component {\n\n    render() {\n        return(\n            <div className=\"Artist\">\n                <Link to={`/artists/${slugify(this.props.artistData.name)}`}>\n                    <img src={this.props.artistData.cover_image} alt={this.props.artistData.name}/>\n                    <div className=\"Artist-overlay\">\n                        <h5>{this.props.artistData.name}</h5>\n                    </div>\n                </Link>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './ArtistGrid.css';\nimport Artist from \"./Artist\";\nimport Utils from \"../lib/utils\";\n\nexport default class ArtistGrid extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            artists: []\n        };\n\n        this.fetchArtistData = this.fetchArtistData.bind(this);\n    }\n\n    componentDidMount() {\n        this.fetchArtistData();\n    }\n\n    fetchArtistData() {\n        Utils.fetchAllArtists((err, artists) => {\n            if(err) {\n                console.log(err);\n            } else {\n                this.setState({\n                    artists: artists\n                });\n            }\n        });\n    }\n\n    render() {\n        return(\n            <div className=\"ArtistGrid\">\n                <div className=\"ArtistGrid-columns\">\n                    {\n                        this.state.artists.map((artist) => {\n                            return(\n                                <Artist artistData={artist} key={artist.name}/>\n                            )\n                        })\n                    }\n                </div>\n                <div className=\"ArtistGrid-arrow\">\n                    <i className=\"material-icons\">\n                        navigate_next\n                    </i>\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './Bio.css';\nimport Utils from \"../lib/utils\";\n\nexport default class Bio extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            artistData: this.props.artistData\n        };\n\n        this.fetchData = this.fetchData.bind(this);\n        this.getWebsiteLink = this.getWebsiteLink.bind(this);\n        this.getFacebookLink = this.getFacebookLink.bind(this);\n        this.getInstagramLink = this.getInstagramLink.bind(this);\n        this.getSpotifyLink = this.getSpotifyLink.bind(this);\n    }\n\n    componentDidMount() {\n        if(!this.state.artistData) {\n            this.fetchData();\n        }\n    }\n\n    fetchData() {\n        let slug = this.props.match.params.slug;\n        Utils.fetchAllArtists((err, artists) => {\n            if(err) {\n                console.log(err);\n            } else {\n                let artist = Utils.findArtistBySlug(artists, slug);\n                this.setState({\n                    artistData: artist\n                })\n            }\n        });\n    }\n\n    getWebsiteLink() {\n        if(this.state.artistData.website) {\n            return(\n                <a href={this.state.artistData.website} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <i className=\"ion-md-globe\"/>\n                </a>\n            )\n        } else {\n            return (<span/>);\n        }\n    }\n\n    getFacebookLink() {\n        if(this.state.artistData.facebook) {\n            return(\n                <a href={this.state.artistData.facebook} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <i className=\"ion-logo-facebook\"/>\n                </a>\n            )\n        } else {\n            return (<span/>);\n        }\n    }\n\n    getInstagramLink() {\n        if(this.state.artistData.instagram) {\n            return(\n                <a href={this.state.artistData.instagram} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <i className=\"ion-logo-instagram\"/>\n                </a>\n            )\n        } else {\n            return (<span/>);\n        }\n    }\n\n    getSpotifyLink() {\n        if(this.state.artistData.spotify) {\n            let parts = this.state.artistData.spotify.split('/');\n            let id = parts[parts.length - 1];\n            return(\n                <iframe\n                    src={`https://open.spotify.com/follow/1/?uri=spotify:artist:${id}&size=basic&theme=light&show-count=0`}\n                    width=\"94\" height=\"28\" scrolling=\"no\" frameBorder=\"0\"\n                    allowtransparency=\"true\">\n                </iframe>\n            )\n        } else {\n            return (<span/>);\n        }\n    }\n\n    render() {\n        if(this.state.artistData) {\n            return(\n                <div className=\"Bio\">\n                    <img src={this.state.artistData.other_image} alt={this.state.artistData.name}/>\n                    <div className=\"Bio-overlay\">\n                        <h1>{this.state.artistData.name}</h1>\n                        <div>\n                            {this.getSpotifyLink()}\n                        </div>\n                        <div>\n                            {this.getWebsiteLink()}\n                            {this.getFacebookLink()}\n                            {this.getInstagramLink()}\n                        </div>\n                        <div>\n                            <p>{this.state.artistData.notes}</p>\n                        </div>\n                    </div>\n                </div>\n            )\n        } else {\n            return(\n                <div/>\n            )\n        }\n    }\n}","import React from 'react';\nimport './App.css';\nimport Toolbar from \"./components/Toolbar\";\nimport Menu from './components/Menu';\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\nimport AlbumGrid from \"./components/AlbumGrid\";\nimport Release from \"./components/Release\";\nimport ArtistGrid from \"./components/ArtistGrid\";\nimport Bio from \"./components/Bio\";\n\nexport default class App extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isMenuOpen: false\n        };\n\n        this.handleMenuClicked = this.handleMenuClicked.bind(this);\n        this.handleMenuItemClicked = this.handleMenuItemClicked.bind(this);\n    }\n\n    handleMenuClicked(isOpen) {\n        this.setState({\n            isMenuOpen: isOpen\n        });\n    }\n\n    handleMenuItemClicked() {\n        this.setState({\n            isMenuOpen: false\n        })\n    }\n\n    render() {\n        return (\n            <HashRouter basename={process.env.PUBLIC_URL}>\n                <div className=\"App\">\n                    <header className=\"App-header\">\n                        <Toolbar isOpen={this.state.isMenuOpen} onMenuClicked={this.handleMenuClicked}/>\n                        <Menu isOpen={this.state.isMenuOpen} onMenuItemClicked={this.handleMenuItemClicked}/>\n                    </header>\n                    <div className=\"App-content\">\n                            <Switch>\n                                <Route exact path=\"/\" render={props => (<AlbumGrid {...props}/>)}/>\n                                <Route exact path=\"/releases\" render={props => (<AlbumGrid {...props}/>)}/>\n                                <Route path=\"/releases/:slug\" render={props => (<Release {...props}/>)}/>\n                                <Route exact path=\"/artists\" render={props => (<ArtistGrid {...props}/>)}/>\n                                <Route path=\"/artists/:slug\" render={props => (<Bio {...props}/>)}/>\n                            </Switch>\n                    </div>\n                    <footer className=\"App-footer\">\n                        Floordoor Records\n                    </footer>\n                </div>\n            </HashRouter>\n        );\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}